-- Создание базы данных

CREATE DATABASE nyc_taxi;

-- Создание таблицы в базе данных

CREATE TABLE nyc_taxi.trips_small (
    trip_id             UInt32,
    pickup_datetime     DateTime,
    dropoff_datetime    DateTime,
    pickup_longitude    Nullable(Float64),
    pickup_latitude     Nullable(Float64),
    dropoff_longitude   Nullable(Float64),
    dropoff_latitude    Nullable(Float64),
    passenger_count     UInt8,
    trip_distance       Float32,
    fare_amount         Float32,
    extra               Float32,
    tip_amount          Float32,
    tolls_amount        Float32,
    total_amount        Float32,
    payment_type        Enum('CSH' = 1, 'CRE' = 2, 'NOC' = 3, 'DIS' = 4, 'UNK' = 5),
    pickup_ntaname      LowCardinality(String),
    dropoff_ntaname     LowCardinality(String)
)
ENGINE = MergeTree
PRIMARY KEY (pickup_datetime, dropoff_datetime);

-- Создание таблиц в базе данных

INSERT INTO nyc_taxi.trips_small
SELECT
    trip_id,
    pickup_datetime,
    dropoff_datetime,
    pickup_longitude,
    pickup_latitude,
    dropoff_longitude,
    dropoff_latitude,
    passenger_count,
    trip_distance,
    fare_amount,
    extra,
    tip_amount,
    tolls_amount,
    total_amount,
    payment_type,
    pickup_ntaname,
    dropoff_ntaname
FROM gcs(
    'https://storage.googleapis.com/clickhouse-public-datasets/nyc-taxi/trips_{0..2}.gz',
    'TabSeparatedWithNames'
);

-- Запросы на получение данных из таблиц

SELECT 
    count() AS total_trips,
    min(pickup_datetime) AS first_trip,
    max(pickup_datetime) AS last_trip,
    avg(fare_amount) AS avg_fare,
    avg(trip_distance) AS avg_distance
FROM trips;

SELECT 
    toYear(pickup_datetime) AS year,
    count() AS trips_count
FROM trips
GROUP BY year
ORDER BY year;

SELECT 
    dayOfWeek(pickup_datetime) AS day_of_week,
    count() AS trips_count,
    avg(fare_amount) AS avg_fare
FROM trips
GROUP BY day_of_week
ORDER BY day_of_week;

SELECT 
    pickup_datetime,
    fare_amount,
    trip_distance,
    pickup_longitude,
    pickup_latitude
FROM trips
ORDER BY fare_amount DESC
LIMIT 10;

SELECT 
    floor(trip_distance) AS distance_km,
    round(avg(fare_amount),2) AS avg_fare
FROM trips
WHERE trip_distance < 100
GROUP BY distance_km
ORDER BY distance_km;

SELECT 
    round(pickup_longitude, 2) AS lon,
    round(pickup_latitude, 2) AS lat,
    count() AS pickups_count
FROM trips
GROUP BY lon, lat
HAVING pickups_count > 10
ORDER BY pickups_count DESC
LIMIT 100;

SELECT 
    round(trip_distance / (dateDiff('second', pickup_datetime, dropoff_datetime) / 3600),2) AS speed_mph,
    count() AS trips_count
FROM trips
WHERE trip_distance > 0 
  AND dateDiff('second', pickup_datetime, dropoff_datetime) > 0
GROUP BY speed_mph
HAVING speed_mph BETWEEN 1 AND 100;

SELECT 
    floor(tip_amount) AS tip_bucket,
    count() AS trips_count
FROM trips
WHERE tip_amount > 0
GROUP BY tip_bucket
ORDER BY tip_bucket;

SELECT 
    toMonth(pickup_datetime) AS month,
    count() AS trips_count
FROM trips
GROUP BY month
ORDER BY month;

SELECT 
    toHour(pickup_datetime) AS hour,
    round(avg(tip_amount / fare_amount * 100),2) AS avg_tip_percent
FROM trips
WHERE fare_amount > 0
GROUP BY hour
ORDER BY avg_tip_percent DESC
LIMIT 5;

SELECT 
    count() AS long_trips,
    round(avg(fare_amount),2) AS avg_fare
FROM trips
WHERE dateDiff('minute', pickup_datetime, dropoff_datetime) > 120;

SELECT 
    payment_type,
    count() AS trips_count,
    round(avg(fare_amount),2) AS avg_fare
FROM trips
GROUP BY payment_type
ORDER BY trips_count DESC;

SELECT 
    pickup_datetime,
    count() OVER (ORDER BY toDate(pickup_datetime)) AS trips_count
FROM trips
WHERE toDate(pickup_datetime) IN (
    '2015-01-01', -- Новый год
    '2015-07-04'  -- День независимости
);

SELECT 
    pickup_datetime,
    fare_amount,
    trip_distance
FROM trips
WHERE trip_distance = 0 AND fare_amount > 50
ORDER BY fare_amount DESC
LIMIT 10;

SELECT 
    toYear(pickup_datetime) AS year,
    round(avg(fare_amount / trip_distance),2) AS cost_per_mile
FROM trips
WHERE trip_distance > 0 AND fare_amount > 0
GROUP BY year
ORDER BY year;

SELECT 
    CASE 
        WHEN toHour(pickup_datetime) BETWEEN 6 AND 18 THEN 'day'
        ELSE 'night'
    END AS time_of_day,
    count() AS trips_count,
    round(avg(fare_amount),2) AS avg_fare
FROM trips
GROUP BY time_of_day;

SELECT 
    toHour(pickup_datetime) AS hour,
    round(sum(fare_amount),2) AS total_revenue,
    round(avg(fare_amount),2) AS avg_fare
FROM trips
GROUP BY hour
ORDER BY hour;
